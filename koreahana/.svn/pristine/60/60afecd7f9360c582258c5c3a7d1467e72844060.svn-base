<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="exts.mapper.com.ComMbr">
	
		
	<sql id="comMbrWhere">
		WHERE
			m.ISDEL = 0
		<if test='mbrId != null and !mbrId.equals("")'>
			AND m.MBR_ID = #{mbrId}
		</if>
		<if test='mbrLogin != null and !mbrLogin.equals("")'>
			AND m.MBR_LOGIN = #{typeId}
		</if>
		<if test='notmbrLogin != null and !notmbrLogin.equals("")'>
			AND m.MBR_LOGIN != #{notmbrLogin}
		</if>
		<if test='orgId != null and !orgId.equals("")'>
			AND m.ORG_ID = #{orgId}
		</if>
		<if test='typeId != null and !typeId.equals("")'>
			AND m.TYPE_ID = #{typeId}
		</if>
		<choose>
			<when test='"1".equals(selectCondition)'>
				AND (m.EXPIRE_DATE IS NULL OR TO_CHAR(SYSDATE,'YYYYMMDD') &lt;= TO_CHAR(m.EXPIRE_DATE,'YYYYMMDD'))
			</when>
			<when test='"2".equals(selectCondition)'>
				AND m.EXPIRE_DATE IS NOT NULL AND TO_CHAR(SYSDATE,'YYYYMMDD') &gt; TO_CHAR(m.EXPIRE_DATE,'YYYYMMDD')
			</when>
			<when test='"3".equals(selectCondition)'>
				AND m.PW_MISCNT &gt; #{ex01}
			</when>
		</choose>
		<if test='searchKeyword != null and !searchKeyword.equals("")'>
			<choose>
				<when test='"0".equals(searchCondition)'>
					AND (
						m.MBR_NM LIKE '%'||#{searchKeyword}||'%'
						OR m.MBR_LOGIN LIKE '%'||#{searchKeyword}||'%'
					)
				</when>
			</choose>			
		</if>
	</sql>
	<sql id="comMbrColumn">
		m.MBR_ID                   mbrId              ,
		m.MBR_LOGIN                mbrLogin              ,
		m.ORG_ID                   orgId              ,
		m.MBR_NM                   mbrNm              ,
		m.PASSWD                   passwd              ,
		m.TYPE_ID                  typeId              ,
		m.EXPIRE_DATE              expireDate              ,
		m.PW_MISCNT                pwMiscnt                 ,
		m.LOCK_DATE                lockDate                 ,
		m.SN                sn                 ,
		m.DP                dp                 ,
		m.CREATED                 created            ,
		m.MODIFIED                   modified	,
		
		ma.GENDER_CD		genderCd		,
		FN_CRYPTO_DEC(ma.BRDT_YMD,'${scrKey}')		brdtYmd		,
		FN_CRYPTO_DEC(ma.RRNO,'${scrKey}')            rrno       ,
		FN_CRYPTO_DEC(ma.NTKRDF_UNQ_NO,'${scrKey}')		ntkrdfUnqNo ,
		ma.HANAWON_TH		hanawonTh		,
		ma.ENTCNY_YMD			entcnyYmd	,
		ma.PRTDCS_YMD			prtdcsYmd	,
		ma.HANAWON_FNSH_YMD	hanawonFnshYmd	,
		FN_CRYPTO_DEC(ma.MBPHNO,'${scrKey}')		mbphno		,
		FN_CRYPTO_DEC(ma.TELNO,'${scrKey}')		telno		,
		FN_CRYPTO_DEC(ma.ZIP,'${scrKey}')		zip		,
		FN_CRYPTO_DEC(ma.ADDR,'${scrKey}')		addr		,
		FN_CRYPTO_DEC(ma.DADDR,'${scrKey}')		daddr	
	</sql>
	<sql id="comMbrTable">
	    JNITCMSMBR m
	    LEFT JOIN TB_MBR_ADTIFM ma ON (ma.MBR_ID = m.MBR_ID)
	</sql>
	<select id="selectList" parameterType="exts.com.vo.ComMbrVO" resultType="exts.com.vo.ComMbrVO">
		<if test="recordCountPerPage != 0">
		SELECT  
			*
		FROM  (
		</if>
			SELECT 
				ROWNUM RNUM, ALL_LIST.*
			FROM  (
					SELECT
						<include refid="comMbrColumn"/>
					FROM
						<include refid="comMbrTable"/>
					<include refid="comMbrWhere"/>
					ORDER BY
						m.CREATED DESC
				)ALL_LIST
		<if test="recordCountPerPage != 0">
		) Z
		WHERE  
			RNUM  &gt; #{firstIndex}
			AND  RNUM &lt;= #{firstIndex} + #{recordCountPerPage}
		</if>
	</select>
	<select id="selectTot" parameterType="exts.com.vo.ComMbrVO" resultType="Integer">
		SELECT
			COUNT(*) AS TOTAL
		FROM
			<include refid="comMbrTable"/>
		<include refid="comMbrWhere"/>
	</select>
	
	
	<select id="select" parameterType="exts.com.vo.ComMbrVO" resultType="exts.com.vo.ComMbrVO">
		SELECT
			<include refid="comMbrColumn"/>
		FROM
			<include refid="comMbrTable"/>
		WHERE
		<choose>
			<when test='dp != null and !dp.equals("")'>
				m.DP = #{dp}
			</when>
			<when test='sn != null and !sn.equals("")'>
				m.SN = #{sn}
			</when>
			<otherwise>
				m.MBR_ID = #{mbrId}
			</otherwise>
		</choose>
			
	</select>
	
	<update id="updateUserKey" parameterType="exts.com.vo.ComMbrVO">
		UPDATE
			JNITCMSMBR
		SET
			SN = #{sn}
		WHERE
			DP = #{dp}
	</update>
	
	<update id="mergeMbrAdt" parameterType="exts.com.vo.ComMbrVO">
		MERGE INTO
			TB_MBR_ADTIFM 
			USING dual
				ON (MBR_ID = #{mbrId})
			WHEN MATCHED THEN
				UPDATE
				SET 
					GENDER_CD		    = #{genderCd}		,
					BRDT_YMD		    = FN_CRYPTO_ENC(REPLACE(REPLACE(#{brdtYmd},'-',''),'.',''),'${scrKey}')		,
					RRNO                = FN_CRYPTO_ENC(#{rrno},'${scrKey}')		,
					NTKRDF_UNQ_NO	    = FN_CRYPTO_ENC(#{ntkrdfUnqNo},'${scrKey}')		,
					HANAWON_TH		    = #{hanawonTh}		,
					ENTCNY_YMD		    = REPLACE(REPLACE(#{entcnyYmd},'-',''),'.','')		,
					PRTDCS_YMD		    = REPLACE(REPLACE(#{prtdcsYmd},'-',''),'.','')		,
					HANAWON_FNSH_YMD    = REPLACE(REPLACE(#{hanawonFnshYmd},'-',''),'.','')		,
					MBPHNO	            = FN_CRYPTO_ENC(#{mbphno},'${scrKey}')		,
					TELNO	            = FN_CRYPTO_ENC(#{telno},'${scrKey}')		,
					ZIP		            = FN_CRYPTO_ENC(#{zip},'${scrKey}')		,
					ADDR	            = FN_CRYPTO_ENC(#{addr},'${scrKey}')		,
					DADDR	            = FN_CRYPTO_ENC(#{daddr},'${scrKey}')		
			WHEN NOT MATCHED THEN
				INSERT (
					MBR_ID		,
					GENDER_CD		,
					BRDT_YMD		,
					RRNO            ,
					NTKRDF_UNQ_NO		,
					HANAWON_TH		,
					ENTCNY_YMD			,
					PRTDCS_YMD			,
					HANAWON_FNSH_YMD	,
					MBPHNO		,
					TELNO		,
					ZIP		,
					ADDR		,
					DADDR		
				)VALUES (
					#{mbrId}		,
					#{genderCd}		,
					FN_CRYPTO_ENC(REPLACE(REPLACE(#{brdtYmd},'-',''),'.',''),'${scrKey}')		,
					FN_CRYPTO_ENC(#{rrno},'${scrKey}')          ,
					FN_CRYPTO_ENC(#{ntkrdfUnqNo},'${scrKey}')		,
					#{hanawonTh}		,
					REPLACE(REPLACE(#{entcnyYmd},'-',''),'.','')	,
					REPLACE(REPLACE(#{prtdcsYmd},'-',''),'.','')	,
					REPLACE(REPLACE(#{hanawonFnshYmd},'-',''),'.','')	,
					FN_CRYPTO_ENC(#{mbphno},'${scrKey}')		,
					FN_CRYPTO_ENC(#{telno},'${scrKey}')		,
					FN_CRYPTO_ENC(#{zip},'${scrKey}')		,
					FN_CRYPTO_ENC(#{addr},'${scrKey}')		,
					FN_CRYPTO_ENC(#{daddr},'${scrKey}')		
				)

	</update>
	
<!-- 신청 정보 매핑용 -->
	<sql id="mbrAdtColumn">	
		FN_CRYPTO_DEC(ma.NTKRDF_UNQ_NO,'${scrKey}')				ntkrdfUnqNo		,
		ma.HANAWON_TH					hanawonTh		,
		ma.ENTCNY_YMD					entcnyYmd	,
		ma.PRTDCS_YMD					prtdcsYmd	,
		ma.HANAWON_FNSH_YMD				hanawonFnshYmd			
	</sql>
	<sql id="mbrAdtTable">
		LEFT JOIN TB_MBR_ADTIFM ma ON (s.RGTR_ID = ma.MBR_ID)
	</sql>
</mapper>
