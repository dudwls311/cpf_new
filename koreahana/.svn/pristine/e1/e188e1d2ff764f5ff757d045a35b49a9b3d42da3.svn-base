/* 신청기간에 따른 지원상태 코드 가져오기 */
CREATE OR REPLACE FUNCTION FN_GET_PBANCRC_STTS (START_DATE IN DATE, END_DATE IN DATE) 
	RETURN VARCHAR2
IS
	PBANCRC_STTS VARCHAR2(6);
BEGIN

	SELECT (
		CASE
			WHEN START_DATE IS NULL AND END_DATE IS NULL THEN '12001' 				/* 미정 */
			WHEN START_DATE = TO_DATE('19800101', 'YYYYMMDD') and END_DATE = TO_DATE('99990101', 'YYYYMMDD') THEN '12002' 	/* 상시 */
			WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') < START_DATE THEN '12003'				/* 모집전 */
			WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') > END_DATE THEN '12004'				/* 모집완료 */
			ELSE '12005'															/* 신청하기 */
		END
		) INTO PBANCRC_STTS
	FROM DUAL;
	RETURN PBANCRC_STTS;
	
EXCEPTION
	WHEN OTHERS THEN RETURN NULL;
END;


/* 코드값으로 명칭 가져오기 */
CREATE or REPLACE FUNCTION FN_GETCDNM(v_cd  VARCHAR2)
RETURN varchar2 IS
tmpVar varchar2(100);

BEGIN
   tmpVar := '';

     SELECT INDIV_CD_NM
     into tmpVar
     FROM TB_CMMN_INDIV_CD
     WHERE INDIV_CD = v_cd;

   RETURN tmpVar;

END;


/* DB 암호화 */
CREATE OR REPLACE FUNCTION FN_CRYPTO_ENC (STR IN VARCHAR2, KEY_STR IN VARCHAR2)
	RETURN VARCHAR2
IS
	RET_ENC VARCHAR2(4000);
BEGIN

	SELECT
		DBSEC.SDB_CRYPTO.ENCRYPT(STR, 'DBSEC', KEY_STR, 'ARIA256', '')
	INTO
		RET_ENC
	from
		DUAL;
	RETURN RET_ENC;
	
EXCEPTION
	WHEN OTHERS THEN RETURN NULL;
END;

/* DB 복호화 */
CREATE OR REPLACE FUNCTION FN_CRYPTO_DEC (ENC_STR IN VARCHAR2, KEY_STR IN VARCHAR2)
	RETURN VARCHAR2
IS
	RET_DEC VARCHAR2(4000);
BEGIN

	SELECT
		DBSEC.SDB_CRYPTO.DECRYPT(ENC_STR, 'DBSEC', KEY_STR, 'ARIA256')
	INTO
		RET_DEC
	from
		DUAL;
	RETURN RET_DEC;
	
EXCEPTION
	WHEN OTHERS THEN RETURN NULL;
END;



/* 가산금 만나이 연령대*/
CREATE OR REPLACE FUNCTION FN_GET_ADT_AGE (DSCN_DATE IN VARCHAR2, BIRTH_DATE IN VARCHAR2) 
	RETURN VARCHAR2
IS
	V_AGE NUMBER;
	AGETYPE VARCHAR2(1);
BEGIN
	V_AGE := TRUNC(MONTHS_BETWEEN(TRUNC(TO_DATE(DSCN_DATE,'YYYYMMDD')), TO_DATE(BIRTH_DATE,'YYYYMMDD')) / 12);

	SELECT (
		CASE
			WHEN DSCN_DATE IS NULL OR BIRTH_DATE IS NULL THEN NULL
			WHEN V_AGE < 5 THEN '1'
			WHEN V_AGE >= 5 AND V_AGE < 10 THEN '2'
			WHEN V_AGE >= 10 AND V_AGE < 16 THEN '3'
			ELSE '4'
		END
		) INTO AGETYPE
	FROM DUAL;
	RETURN AGETYPE;
	
EXCEPTION
	WHEN OTHERS THEN RETURN NULL;
END;

